services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    FourPaws\MobileApiBundle\:
        resource: '../../*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../{Entity,Tests}'

    FourPaws\MobileApiBundle\Controller\:
        resource: '../../Controller'
        public: true
        tags: ['controller.service_arguments']

    FourPaws\MobileApiBundle\Serialization\:
        resource: '../../Serialization/*'
        tags: ['jms_serializer.subscribing_handler']

    FourPaws\MobileApiBundle\Services\Security\TokenGeneratorInterface:
        class: FourPaws\MobileApiBundle\Services\Security\Md5TokenGenerator

    FourPaws\MobileApiBundle\Services\CaptchaServiceInterface:
        class: FourPaws\MobileApiBundle\Services\BitrixCaptchaService


    # Security
    FourPaws\MobileApiBundle\Security\SignCheckerInterface:
        class: FourPaws\MobileApiBundle\Security\SignChecker

    FourPaws\MobileApiBundle\Security\ApiTokenListener:
        arguments: ['@security.token_storage', '@security.authentication.manager']

    # Exception View
    FourPaws\MobileApiBundle\EventListener\ExceptionListener:
        arguments: ['FourPaws\MobileApiBundle\Controller\ExceptionController::showAction', null]
        tags:
          - {name: 'monolog.logger', channel: 'request'}


