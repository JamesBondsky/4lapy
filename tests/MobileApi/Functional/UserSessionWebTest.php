<?php

namespace FourPaws\Tests\MobileApi\Functional;

use FourPaws\MobileApiBundle\Repository\UserSessionRepository;
use FourPaws\MobileApiBundle\Services\Security\FakeTokenGenerator;
use FourPaws\MobileApiBundle\Tables\UserSessionTable;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

class UserSessionWebTest extends WebTestCase
{
    public function setUp()
    {
        $this->clearTestToken();
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testCreate()
    {
        $client = static::createClient();
        $client->request(Request::METHOD_GET, '/mobile_app_v2/start');

        $response = $client->getResponse();
        static::assertInstanceOf(Response::class, $response);

        if ($response) {
            $content = $response->getContent();
            static::assertEquals(Response::HTTP_OK, $response->getStatusCode());
            static::assertJson($content);
            $data = json_decode($content, true);
            static::assertEquals(true, \is_array($data));
            static::assertArrayHasKey('data', $data);
            static::assertArrayHasKey('access_id', $data['data']);
        }
    }

    public function tearDown()
    {
        $this->clearTestToken();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    protected function clearTestToken()
    {
        $result = UserSessionTable::query()
            ->addFilter(UserSessionRepository::FIELD_TOKEN, (new FakeTokenGenerator())->generate())
            ->addSelect('ID')
            ->exec()
            ->fetch();

        /**
         * @var array $result
         */
        if (\is_array($result) && $result['ID']) {
            UserSessionTable::delete($result['ID']);
        }
    }
}
